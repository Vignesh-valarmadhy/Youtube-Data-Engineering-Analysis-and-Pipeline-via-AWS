{
	"jobConfig": {
		"name": "de-on-youtube-raw-cleansed-csv-to-parquet",
		"description": "",
		"role": "arn:aws:iam::825765421264:role/de-on-youtube-glue-s3-role",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "de.py",
		"scriptLocation": "s3://aws-glue-assets-825765421264-us-east-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-01-11T19:51:13.205Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-825765421264-us-east-1/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-enable",
		"sparkPath": "s3://aws-glue-assets-825765421264-us-east-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\r\nfrom awsglue.transforms import *\r\nfrom awsglue.utils import getResolvedOptions\r\nfrom pyspark.context import SparkContext\r\nfrom awsglue.context import GlueContext\r\nfrom awsglue.job import Job\r\n\r\n############################### Added by Carlos ###############################\r\nfrom awsglue.dynamicframe import DynamicFrame\r\n\r\n\r\n## @params: [JOB_NAME]\r\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\r\n\r\nsc = SparkContext()\r\nglueContext = GlueContext(sc)\r\nspark = glueContext.spark_session\r\njob = Job(glueContext)\r\njob.init(args['JOB_NAME'], args)\r\n## @type: DataSource\r\n## @args: [database = \"de_youtube_raw\", table_name = \"raw_statistics\", transformation_ctx = \"datasource0\"]\r\n## @return: datasource0\r\n## @inputs: []\r\n############################### Added by Darshil ###############################\r\npredicate_pushdown = \"region in ('ca','gb','us')\"\r\n\r\ndatasource0 = glueContext.create_dynamic_frame.from_catalog(database = \"de_youtube_raw\", table_name = \"raw_statistics\", transformation_ctx = \"datasource0\", push_down_predicate = predicate_pushdown)\r\n\r\n## @type: ApplyMapping\r\n## @args: [mapping = [(\"video_id\", \"string\", \"video_id\", \"string\"), (\"trending_date\", \"string\", \"trending_date\", \"string\"), (\"title\", \"string\", \"title\", \"string\"), (\"channel_title\", \"string\", \"channel_title\", \"string\"), (\"category_id\", \"long\", \"category_id\", \"long\"), (\"publish_time\", \"string\", \"publish_time\", \"string\"), (\"tags\", \"string\", \"tags\", \"string\"), (\"views\", \"long\", \"views\", \"long\"), (\"likes\", \"long\", \"likes\", \"long\"), (\"dislikes\", \"long\", \"dislikes\", \"long\"), (\"comment_count\", \"long\", \"comment_count\", \"long\"), (\"thumbnail_link\", \"string\", \"thumbnail_link\", \"string\"), (\"comments_disabled\", \"boolean\", \"comments_disabled\", \"boolean\"), (\"ratings_disabled\", \"boolean\", \"ratings_disabled\", \"boolean\"), (\"video_error_or_removed\", \"boolean\", \"video_error_or_removed\", \"boolean\"), (\"description\", \"string\", \"description\", \"string\"), (\"region\", \"string\", \"region\", \"string\")], transformation_ctx = \"applymapping1\"]\r\n## @return: applymapping1\r\n## @inputs: [frame = datasource0]\r\napplymapping1 = ApplyMapping.apply(frame = datasource0, mappings = [(\"video_id\", \"string\", \"video_id\", \"string\"), (\"trending_date\", \"string\", \"trending_date\", \"string\"), (\"title\", \"string\", \"title\", \"string\"), (\"channel_title\", \"string\", \"channel_title\", \"string\"), (\"category_id\", \"long\", \"category_id\", \"long\"), (\"publish_time\", \"string\", \"publish_time\", \"string\"), (\"tags\", \"string\", \"tags\", \"string\"), (\"views\", \"long\", \"views\", \"long\"), (\"likes\", \"long\", \"likes\", \"long\"), (\"dislikes\", \"long\", \"dislikes\", \"long\"), (\"comment_count\", \"long\", \"comment_count\", \"long\"), (\"thumbnail_link\", \"string\", \"thumbnail_link\", \"string\"), (\"comments_disabled\", \"boolean\", \"comments_disabled\", \"boolean\"), (\"ratings_disabled\", \"boolean\", \"ratings_disabled\", \"boolean\"), (\"video_error_or_removed\", \"boolean\", \"video_error_or_removed\", \"boolean\"), (\"description\", \"string\", \"description\", \"string\"), (\"region\", \"string\", \"region\", \"string\")], transformation_ctx = \"applymapping1\")\r\n## @type: ResolveChoice\r\n## @args: [choice = \"make_struct\", transformation_ctx = \"resolvechoice2\"]\r\n## @return: resolvechoice2\r\n## @inputs: [frame = applymapping1]\r\nresolvechoice2 = ResolveChoice.apply(frame = applymapping1, choice = \"make_struct\", transformation_ctx = \"resolvechoice2\")\r\n## @type: DropNullFields\r\n## @args: [transformation_ctx = \"dropnullfields3\"]\r\n## @return: dropnullfields3\r\n## @inputs: [frame = resolvechoice2]\r\ndropnullfields3 = DropNullFields.apply(frame = resolvechoice2, transformation_ctx = \"dropnullfields3\")\r\n## @type: DataSink\r\n## @args: [connection_type = \"s3\", connection_options = {\"path\": \"s3://de-on-youtube-raw-us-east-1-dev-vignesh/youtube/raw_statistics/\"},format = \"parquet\", transformation_ctx = \"datasink4\"]\r\n## @return: datasink4\r\n## @inputs: [frame = dropnullfields3]\r\n\r\n############################### Added by Darshil ###############################\r\n#MAKE SURE YOU COPY ONLY WHAT IS NEEDED\r\n\r\ndatasink1 = dropnullfields3.toDF().coalesce(1)\r\ndf_final_output = DynamicFrame.fromDF(datasink1, glueContext, \"df_final_output\")\r\ndatasink4 = glueContext.write_dynamic_frame.from_options(frame = df_final_output, connection_type = \"s3\", connection_options = {\"path\": \"s3://de-on-youtube-cleansed-us-east-1-dev-vignesh/youtube/raw_statistics/\", \"partitionKeys\": [\"region\"]}, format = \"parquet\", transformation_ctx = \"datasink4\")\r\n\r\n############################### Added by Darshil ###############################\r\njob.commit()"
}